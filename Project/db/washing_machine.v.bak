module washing_machine(
		input CLOCK_27, /*KEY, tirar o key do pin planner*/ //Clock
		output reg [3:0] LEDG, //bomba_agua, modo_agitar, modo_centrifugar, modo_girar
		input wire [1:0] SW, //controle de modos
		output [17:0] LEDR,
		output segA, segB, segC, segD, segE, segF, segG, segDP);  //tirar display 7seg do pin planner
	
	
	integer contador = 0;
	integer jaContou;
	reg flag = 0;		//flag para zerar o contador
	reg [23:0] cnt;
	always @(posedge CLOCK_27) cnt <= cnt+24'h1;
	wire cntovf = &cnt;

						//Dando Set no contador baseado no clock interno
	reg [3:0] UNI;		//UNI eh um contador que conta de 0 a 9
	always @(posedge CLOCK_27) begin		
		if(cntovf) UNI = (UNI==4'h9 ? 4'h0 : UNI+4'h1);
	end
	
	reg [7:0] SevenSeg;
	always @(*)	 begin
	case(UNI)
		4'h0: SevenSeg = 8'b11111100;			
		4'h1: SevenSeg = 8'b01100000;			//usado apenas para teste
		4'h2: SevenSeg = 8'b11011010;
		4'h3: SevenSeg = 8'b11110010;
		4'h4: SevenSeg = 8'b01100110;
		4'h5: SevenSeg = 8'b10110110;
		4'h6: SevenSeg = 8'b10111110;
		4'h7: SevenSeg = 8'b11100000;
		4'h8: SevenSeg = 8'b11111110;
		4'h9: SevenSeg = 8'b11110110;
		default: SevenSeg = 8'b00000000;
	endcase
	end

	assign {segA, segB, segC, segD, segE, segF, segG, segDP} = ~SevenSeg;
	
	

	reg [1:0] modo; 	//modo
	reg [1:0] estado_atual;		//variavel que armazena o estado
	
	parameter modo_espera = 0, limpeza_padrao = 1, limpeza_rapida = 2;	 //modos
	parameter espera = 0, encher = 1, agitar = 2, tempo = 3, agitar2 = 4, esvaziar = 5, centrifugar = 6, fim = 7;	 //estados
	
	always @ (posedge CLOCK_27) begin	//selecao de modo
		case (SW[1:0])
			2'b00:
			begin
				modo <= modo_espera;	//padrão
			end
			2'b01: 
			begin
				modo <= limpeza_padrao;		//ciclo completo
			end
			2'b10: 
			begin
				modo <= limpeza_rapida;		//ciclo simplificado
			end
		endcase
	end
	
	always@ (posedge CLOCK_27) begin //tava UNI
		if(UNI == 4'h0)
			jaContou = 0;
		if (UNI == 4'h9 && ((SW == 2'b01) || (SW == 2'b10)) && jaContou == 0) begin
			contador = contador + 1;
			jaContou = 1;
		end
		if (SW == 2'b00)
			contador = 0;
	end
	
	
	always @ (posedge CLOCK_27) begin 	//funcionalidade
		case (modo)
			modo_espera:
			begin
				estado_atual = espera;
				LEDG = 4'b0000;
			end
			
			limpeza_padrao:
			begin
			//flag = 1;
			
				//ligar modo encher
				if(contador == 1) begin
					//printar ENCHER no display LCD
						LEDG = 4'b1000;
						estado_atual = encher;
					
				end
				//enchendo >> modo agitar
				
				if (contador == 2) begin
					//printar AGITAR no display LCD
						LEDG = 4'b0100;
						estado_atual = agitar;
					
				end
				//agitar >> tempo
				if (contador == 3) begin
						LEDG = 4'b0010;
						estado_atual = tempo;
				end
				//tempo >> agitar2
				if (contador == 4) begin
					//printar AGITAR2 no display LCD
						LEDG = 4'b0100;
						estado_atual = agitar2;
					
					//flag = 1;
				
				end
				//agitar2 >> esvaziar
				if (contador == 5) begin
					//printar ESVAZIAR no display LCD
							LEDG = 4'b0000;
							estado_atual = esvaziar;
					
					//flag = 1;

				end
				//esvaziar >> centrifugar
				if (contador == 6) begin
					//printar CENTRIFUGAR no display LCD
							LEDG = 4'b0001;
							estado_atual = centrifugar;

				end
				//centrifugar >> fim
				if (contador == 7) begin
					//printar FIM no display LCD
					LEDG = 4'b1111;
						estado_atual = fim;
				end
			end
			limpeza_rapida:
				begin
					//ligar modo encher
					if(contador == 1) begin
						//printar ENCHER no display LCD
							LEDG = 4'b1000;
							estado_atual = encher;
						
					end
					//enchendo >> modo agitar
					
					if (contador == 2) begin
						//printar AGITAR no display LCD
							LEDG = 4'b0100;
							estado_atual = agitar;
						
					end
					//agitar >> esvaziar
					if (contador == 3) begin
							LEDG = 4'b0010;
							estado_atual = esvaziar;
					end
					
					//esvaziar >> centrifugar
					if (contador == 4) begin
						//printar CENTRIFUGAR no display LCD
								LEDG = 4'b0001;
								estado_atual = centrifugar;

					end
					//centrifugar >> fim
					if (contador == 5) begin
						//printar FIM no display LCD
						LEDG = 4'b1111;
						estado_atual = fim;
					end
				end
		endcase
end




endmodule 